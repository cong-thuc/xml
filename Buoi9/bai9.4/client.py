import requests
from jsonschema import validate, ValidationError

# =======================
# Schema ki·ªÉm tra book (b√†i 9.1)
# =======================
book_schema = {
    "type": "object",
    "properties": {
        "title": {"type": "string", "minLength": 3, "maxLength": 100},
        "author": {"type": "string", "minLength": 1},
        "price": {"type": "number", "exclusiveMinimum": 0},
        "inStock": {"type": "boolean"},
        "categories": {
            "type": "array",
            "items": {"type": "string", "minLength": 2}
        },
        "rating": {"type": "number", "minimum": 0, "maximum": 5}
    },
    "required": ["title", "author", "price", "inStock"]
}

# =======================
# Schema ki·ªÉm tra subtract (t·ª± x√¢y d·ª±ng)
# =======================
subtract_schema = {
    "type": "object",
    "properties": {
        "a": {"type": "number"},
        "b": {"type": "number"},
        "result": {"type": "number"}
    },
    "required": ["a", "b", "result"]
}


# =======================
# G·ªçi API /api/book
# =======================
print("üîπ Ki·ªÉm tra d·ªØ li·ªáu s√°ch:")
book_response = requests.get("http://127.0.0.1:5000/api/book")
book_data = book_response.json()
print("D·ªØ li·ªáu:", book_data)

try:
    validate(instance=book_data, schema=book_schema)
    print("‚úÖ D·ªØ li·ªáu s√°ch h·ª£p l·ªá!\n")
except ValidationError as e:
    print("L·ªói d·ªØ li·ªáu s√°ch:", e.message, "\n")


# =======================
# G·ªçi API /api/user/Thuc123
# =======================
print("üîπ L·∫•y d·ªØ li·ªáu ng∆∞·ªùi d√πng:")
user_response = requests.get("http://127.0.0.1:5000/api/user/Thuc123")
print("D·ªØ li·ªáu:", user_response.json(), "\n")


# =======================
# G·ªçi API /api/subtract (POST)
# =======================
print("üîπ G·ª≠i ph√©p tr·ª´ a - b:")
data = {"a": 10, "b": 4}
subtract_response = requests.post("http://127.0.0.1:5000/api/subtract", json=data)
subtract_data = subtract_response.json()
print("K·∫øt qu·∫£:", subtract_data)

try:
    validate(instance=subtract_data, schema=subtract_schema)
    print("‚úÖ K·∫øt qu·∫£ h·ª£p l·ªá!")
except ValidationError as e:
    print("L·ªói:", e.message)
